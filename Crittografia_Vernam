package messaggi;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author ps107
 */
public class Messaggi {

	public static String[] arr = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
	public static String path = "Y:\\NR.txt";

	public static void main(String[] args) throws IOException {
		menu();
	}//end main

	public static void menu() throws IOException {
		Scanner menu = new Scanner(System.in);
		int opzione;
		System.out.println("Opzione menu");
		opzione = menu.nextInt();
		switch (opzione) {
			case 1:
				invia_messaggio();
				break;
			case 2:
				leggi_messaggio();
				break;
			case 3:
				System.exit(0);
				break;
			default:
				System.out.println("Opzione invalida");
		}
	}

	public static void invia_messaggio() throws IOException {
		System.out.println("Dammi la linea");
		Scanner scan = new Scanner(System.in);
		String mex = scan.nextLine();
		scriviFile(encode(mex, generateKey(mex)));
	}

	public static void leggi_messaggio() throws IOException {
		System.out.println("Dammi path");
		Scanner scan = new Scanner(System.in);
		String path = scan.nextLine();
		String str = null;
		File f = new File(path);
		try {
			if (f.exists() && !f.isDirectory()) {
				BufferedReader reader = new BufferedReader(new FileReader(f));
				str = reader.readLine();
			} else {
				System.out.println("Il file non esiste");
				System.exit(0);
			}
		} catch (IOException E) {
			System.out.println("ERRORE");
		}
		System.out.println(decode((str)));

	}

	public static String encode(String mex, String key) {
		String ris = "";
		String[] mexsplit = mex.split("");
		String[] keysplit = key.split("");
		int sum;
		for (int i = 0; i < mexsplit.length; i++) {
			sum = (mexsplit[i].charAt(0) - 65) + (keysplit[i].charAt(0) - 65);
			ris += arr[sum % 26];
		}
		return ris + key;
	}

	public static String decode(String mex) {
		String ris = "";
		String[] mexsplit = mex.substring(0, mex.length() / 2).split("");
		String[] keysplit = mex.substring(mex.length() / 2, mex.length()).split("");
		int sum;
		for (int i = 0; i < mexsplit.length; i++) {
			sum = (mexsplit[i].charAt(0) - 65) - (keysplit[i].charAt(0) - 65) + 26;
			ris += arr[sum % 26];
		}
		return ris;
	}//end decode

	public static String generateKey(String str) {
		Random rand = new Random();
		String key = "";
		for (int i = 0; i < str.length(); i++) {
			key += arr[rand.nextInt(26)];
		}
		return key;
	}

	public static void scriviFile(String str) throws IOException {
		BufferedWriter writer = new BufferedWriter(new FileWriter(path));
		writer.write(str);
		writer.close();
	}

}//end clas


